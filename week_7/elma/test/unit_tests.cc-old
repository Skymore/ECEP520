#include <iostream>
#include "gtest/gtest.h"
#include "elma.h"

#define MS(__ms__) high_resolution_clock::duration(milliseconds(__ms__))

namespace {

    using namespace std::chrono;

    class MyProcess : public elma::Process {
        public:
        MyProcess(std::string name) : Process(name) {}
        void init() {
            std::cout << "initializing\n";
            watch("go", [](elma::Event& e) { 
                std::cout << "Got event " << e.string_value() << "\n";
            });
        }
        void start() {}
        void update() { 
            std::cout << name() << ":: " 
                    << milli_time()
                    << "ms\n";
            elma::Event e("hello");
            emit("go", e);
        }
        void stop() {}
    };

    TEST(Basic,Basic) {
        elma::Manager m;
        MyProcess p("P");
        m.schedule(p,MS(10))
         .init()
         .run(MS(100));
    }

}
